# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches:
      - "master"
    paths-ignore:
      - 'docs/**'
      - '**.md'
  pull_request:
    branches:
      - "master"
    paths-ignore:
      - 'docs/**'
      - '**.md'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build
        run: mvn -B clean package

  test:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        test: [unit, integration, e2e]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Run Tests
        run: mvn -B test -Dtest=${{ matrix.test }}

  coverage:
    runs-on: ubuntu-latest
    needs: test
    env:
      cov_token: ${{ secrets.COV_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Generate Coverage Report
        if: ${{ env.cov_token != '' }}
        run: mvn -B -DjacocoReports=jetcache-test/target/site/jacoco-aggregate/jacoco.xml jacoco:report-aggregate coveralls:report -DrepoToken=${{ secrets.COV_TOKEN }} -Dtick=3
